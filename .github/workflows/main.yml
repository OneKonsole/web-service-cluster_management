name: Publish Docker Image on Push to Main

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2
      - name: 'Login to Dockerhub Container Registry'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Build Docker Image'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            onekonsole/web-service-cluster_management:latest

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Checkout GitHub Action'
  #       uses: actions/checkout@v2
  #       # uses: actions/checkout@main
  #     - name: 'Login to Dockerhub Container Registry'
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: 'Deploy Helm Chart'
  #       uses: azure/k8s-set-context@v1
  #       with:
  #         method: kubeconfig
  #         kubeconfig: ${{ secrets.KUBE_CONFIG }}
  #     - name: 'Deploy Helm Chart'
  #       uses: azure/k8s-deploy@v1
  #       with:
  #         method: helm
  #         chart: ./helm/web-service-cluster_management
  #         release: web-service-clustermanagement-github-actions
  #         arguments: --namespace web-service-clustermanagement-github-actions --create-namespace
  #         values: |
  #           nameOverride: "github-actions-web-service-clustermanagement"
  #           fullnameOverride: "github-actions-web-service-clustermanagement"
  #           ingress:
  #             enabled: true
  #             className: ${{ secrets.INGRESS_CLASS_NAME }}
  #             labels: 
  #               app: web-service-clustermanagement-github-actions
  #               ${{ secrets.INGRESS_LABELS }
  #             annotations: 
  #               # cert-manager.io/cluster-issuer: ${{ secrets.CERT_MANAGER_CLUSTER_ISSUER }}
  #               external-dns.alpha.kubernetes.io/target: 127.0.0.1
  #               # kubernetes.io/tls-acme: "true"
  #             hosts:
  #               - host: ${{ secrets.INGRESS_HOST }}
  #                 paths:
  #                   - path: /
  #                     pathType: ImplementationSpecific
  #             tls:
  #               - secretName: ${{ secrets.INGRESS_TLS_SECRET_NAME }}
  #                 hosts:
  #                   - ${{ secrets.INGRESS_HOST }}

